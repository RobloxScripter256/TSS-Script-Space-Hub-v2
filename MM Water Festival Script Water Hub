local allowedPlaceIds = {
	12649095253, -- Replace with the allowed PlaceId(s)
}

if not table.find(allowedPlaceIds, game.PlaceId) then
	warn("This script is not allowed in this place.")
	return -- stops the script from continuing
end

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Myanmar Water Festival - Water Hub ðŸ’¦",
	Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = "Water Hub ðŸ’¦",
	LoadingSubtitle = "by Dev_Smiley",
	ShowText = "Water Hub ðŸ’¦", -- for mobile users to unhide rayfield, change if you'd like
	Theme = "Ocean", -- Check https://docs.sirius.menu/rayfield/configuration/themes

	ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},

	Discord = {
		Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
		Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
		RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},

	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Untitled",
		Subtitle = "Key System",
		Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
		FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

local PlayerTab = Window:CreateTab("Player Settings", 4483362458) -- Title, Image

local Input = PlayerTab:CreateInput({
	Name = "Walk Speed",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input1",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Hip Height",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input2",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").HipHeight = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Health",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input3",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Max Health",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input4",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").MaxHealth = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Max Slope Angle",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input5",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").MaxSlopeAngle = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Jump Power",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input6",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = Text-- The function that takes place when the input is changed
	end,
})

-------------------------------------------------------------------------------------------------------------------------------------------------------------

local CSettingsTab = Window:CreateTab("Client Settings", 4483362458) -- Title, Image

local Label = CSettingsTab:CreateLabel("To Fix Lag Remove Them If You Want", 4483362458, Color3.fromRGB(85, 170, 127), false) -- Title, Icon, Color, IgnoreTheme

local Button = CSettingsTab:CreateButton({
	Name = "Remove Apartments",
	Callback = function()
		local targets = {"Apartment", "Apartment2"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Fences",
	Callback = function()
		local targets = {"Fences"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Map (Folder)",
	Callback = function()
		local targets = {"Map"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Roads",
	Callback = function()
		local targets = {"Road"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Apartments",
	Callback = function()
		local targets = {"Apartment", "Apartment2"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Spawn Decorations",
	Callback = function()
		local targets = {"Spawn"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Trees And Other",
	Callback = function()
		local targets = {"Trees", "Traffic lights", "Tower", "tree floors"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Other Models",
	Callback = function()
		local targets = {"ComputerSystem", "Grass", "Grass", "Model", "Model", "Rocks", "Speaker"}

		for _, name in ipairs(targets) do
			local model = game.Workspace:FindFirstChild(name)
			if model and model:IsA("Model") then
				model:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Mountains",
	Callback = function()
		local targets = {"Mountain", "Mountain"}

		for _, name in ipairs(targets) do
			local meshpart = game.Workspace:FindFirstChild(name)
			if meshpart and meshpart:IsA("MeshPart") then
				meshpart:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Label = CSettingsTab:CreateLabel("Clean The Whole Workspace And It Will Create A New Baseplate", 4483362458, Color3.fromRGB(85, 170, 127), false) -- Title, Icon, Color, IgnoreTheme

local Button = CSettingsTab:CreateButton({
	Name = "Clean Workspace",
	Callback = function()
		local Players = game:GetService("Players")
		local LocalPlayer = Players.LocalPlayer

		-- Clean workspace
		for _, item in ipairs(workspace:GetChildren()) do
			local isPlayerChar = false

			for _, player in ipairs(Players:GetPlayers()) do
				if player.Character == item then
					isPlayerChar = true
					break
				end
			end

			if not isPlayerChar then
				if not item:IsA("Folder") then
					if item:IsA("Model") or item:IsA("Part") or item:IsA("MeshPart") or item:IsA("UnionOperation") then
						item:Destroy()
					end
				end
			end
		end

		-- Kill the local player
		if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
			LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health = 0
		end

		-- Create new baseplate
		local baseplate = Instance.new("Part")
		baseplate.Name = "Baseplate"
		baseplate.Anchored = true
		baseplate.Size = Vector3.new(2042, 10, 2042)
		baseplate.Position = Vector3.new(0, -11, 0)
		baseplate.Material = Enum.Material.SmoothPlastic
		baseplate.Color = Color3.fromRGB(163, 162, 165)
		baseplate.Parent = workspace
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Clean Lighting",
	Callback = function()
		local Lighting = game:GetService("Lighting")
		for _, obj in ipairs(Lighting:GetChildren()) do
			obj:Destroy()
		end
	end,
})
