local allowedPlaceIds = {
	12649095253, -- Replace with the allowed PlaceId(s)
}

if not table.find(allowedPlaceIds, game.PlaceId) then
	warn("This script is not allowed in this place.")
	return -- stops the script from continuing
end

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Myanmar Water Festival - Water Hub ðŸ’¦",
	Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = "Water Hub ðŸ’¦",
	LoadingSubtitle = "by Dev_Smiley",
	ShowText = "Water Hub ðŸ’¦", -- for mobile users to unhide rayfield, change if you'd like
	Theme = "Ocean", -- Check https://docs.sirius.menu/rayfield/configuration/themes

	ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},

	Discord = {
		Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
		Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
		RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},

	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Untitled",
		Subtitle = "Key System",
		Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
		FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

local PlayerTab = Window:CreateTab("Player Settings", 4483362458) -- Title, Image

local Input = PlayerTab:CreateInput({
	Name = "Walk Speed",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input1",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Hip Height",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input2",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").HipHeight = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Health",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input3",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Max Health",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input4",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").MaxHealth = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Max Slope Angle",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input5",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").MaxSlopeAngle = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Jump Power",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input6",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = Text-- The function that takes place when the input is changed
	end,
})

local CSettingsTab = Window:CreateTab("Client Settings", 4483362458) -- Title, Image
