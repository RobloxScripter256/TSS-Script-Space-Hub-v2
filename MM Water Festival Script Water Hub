local allowedPlaceIds = {
	12649095253, -- Replace with the allowed PlaceId(s)
}

if not table.find(allowedPlaceIds, game.PlaceId) then
	warn("This script is not allowed in this place.")
	return -- stops the script from continuing
end

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
	Name = "Myanmar Water Festival - Water Hub ðŸ’¦",
	Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = "Water Hub ðŸ’¦",
	LoadingSubtitle = "by Dev_Smiley",
	ShowText = "Water Hub ðŸ’¦", -- for mobile users to unhide rayfield, change if you'd like
	Theme = "Ocean", -- Check https://docs.sirius.menu/rayfield/configuration/themes

	ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

	DisableRayfieldPrompts = false,
	DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},

	Discord = {
		Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
		Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
		RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},

	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Untitled",
		Subtitle = "Key System",
		Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
		FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
	}
})

local RunService = game:GetService("RunService")

local PlayerTab = Window:CreateTab("Player Settings", 4483362458) -- Title, Image

local Input = PlayerTab:CreateInput({
	Name = "Walk Speed",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input1",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Hip Height",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input2",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").HipHeight = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Health",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input3",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").Health = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Max Health",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input4",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").MaxHealth = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Max Slope Angle",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input5",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").MaxSlopeAngle = Text-- The function that takes place when the input is changed
	end,
})

local Input = PlayerTab:CreateInput({
	Name = "Jump Power",
	CurrentValue = "",
	PlaceholderText = "Input Number",
	RemoveTextAfterFocusLost = false,
	Flag = "Input6",
	Callback = function(Text)
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid").JumpPower = Text-- The function that takes place when the input is changed
	end,
})

local TeleportService = game:GetService("TeleportService")

local Button = PlayerTab:CreateButton({
	Name = "Rejoin Server",
	Callback = function()
		local placeId = game.PlaceId
		local jobId = game.JobId
		TeleportService:TeleportToPlaceInstance(placeId, jobId, game.Players.LocalPlayer)
	end,
})

-------------------------------------------------------------------------------------------------------------------------------------------------------------

local CSettingsTab = Window:CreateTab("Client Settings", 4483362458) -- Title, Image

local Label = CSettingsTab:CreateLabel("To Fix Lag Remove Them If You Want", 4483362458, Color3.fromRGB(85, 170, 127), false) -- Title, Icon, Color, IgnoreTheme

local Button = CSettingsTab:CreateButton({
	Name = "Remove Apartments",
	Callback = function()
		local targets = {"Apartment", "Apartment2"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Fences",
	Callback = function()
		local targets = {"Fences"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Map (Folder)",
	Callback = function()
		local targets = {"Map"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Roads",
	Callback = function()
		local targets = {"Road"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Apartments",
	Callback = function()
		local targets = {"Apartment", "Apartment2"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Spawn Decorations",
	Callback = function()
		local targets = {"Spawn"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Trees And Other",
	Callback = function()
		local targets = {"Trees", "Traffic lights", "Tower", "tree floors"}

		for _, name in ipairs(targets) do
			local folder = game.Workspace:FindFirstChild(name)
			if folder and folder:IsA("Folder") then
				folder:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Other Models",
	Callback = function()
		local targets = {"ComputerSystem", "Grass", "Grass", "Model", "Model", "Rocks", "Speaker"}

		for _, name in ipairs(targets) do
			local model = game.Workspace:FindFirstChild(name)
			if model and model:IsA("Model") then
				model:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Remove Mountains",
	Callback = function()
		local targets = {"Mountain", "Mountain"}

		for _, name in ipairs(targets) do
			local meshpart = game.Workspace:FindFirstChild(name)
			if meshpart and meshpart:IsA("MeshPart") then
				meshpart:Destroy()
			end
		end-- The function that takes place when the button is pressed
	end,
})

local Label = CSettingsTab:CreateLabel("Clean The Whole Workspace And It Will Create A New Baseplate (Please Reset When You Clicked It)", 4483362458, Color3.fromRGB(85, 170, 127), false) -- Title, Icon, Color, IgnoreTheme

local Button = CSettingsTab:CreateButton({
	Name = "Clean Workspace",
	Callback = function()
		local Players = game:GetService("Players")
		local LocalPlayer = Players.LocalPlayer
		local Terrain = workspace:FindFirstChildOfClass("Terrain")

		-- Clean workspace
		for _, item in ipairs(workspace:GetChildren()) do
			local isPlayerChar = false

			-- Ignore player characters
			for _, player in ipairs(Players:GetPlayers()) do
				if player.Character == item then
					isPlayerChar = true
					break
				end
			end

			-- Destroy all except characters and terrain (terrain cleared later)
			if not isPlayerChar and item ~= Terrain then
				pcall(function()
					item:Destroy()
				end)
			end
		end

		-- Clear terrain (client-side, including clouds/grass/water/voxels)
		if Terrain then
			pcall(function()
				Terrain:Clear()
				local clouds = Terrain:FindFirstChild("Clouds")
				if clouds then clouds:Destroy() end
			end)
		end

		-- Create baseplate
		local existingBase = workspace:FindFirstChild("Baseplate")
		if existingBase then existingBase:Destroy() end

		local baseplate = Instance.new("Part")
		baseplate.Name = "Baseplate"
		baseplate.Anchored = true
		baseplate.Size = Vector3.new(2042, 26, 2042)
		baseplate.Position = Vector3.new(0, -10, 0)
		baseplate.Material = Enum.Material.SmoothPlastic
		baseplate.Color = Color3.fromRGB(163, 162, 165)
		baseplate.TopSurface = Enum.SurfaceType.Smooth
		baseplate.BottomSurface = Enum.SurfaceType.Smooth
		baseplate.Parent = workspace

		-- Fix camera on respawn (to avoid animation/camera bug)
		LocalPlayer.CharacterAdded:Connect(function(char)
			repeat task.wait() until char:FindFirstChild("Humanoid")
			workspace.CurrentCamera.CameraSubject = char:FindFirstChild("Humanoid")
		end)
	end,
})

local Button = CSettingsTab:CreateButton({
	Name = "Clean Lighting",
	Callback = function()
		local Lighting = game:GetService("Lighting")
		for _, obj in ipairs(Lighting:GetChildren()) do
			obj:Destroy()
		end
	end,
})

-------------------------------------------------------------------------------------------------------------------------------------------------------------

local AAuraTab = Window:CreateTab("Aura Settings", 4483362458) -- Title, Image

local Label = AAuraTab:CreateLabel("Admin Auras", 4483362458, Color3.fromRGB(85, 170, 127), false) -- Title, Icon, Color, IgnoreTheme

local Toggle = AAuraTab:CreateToggle({
	Name = "Admin Aura Button Visible",
	CurrentValue = false,
	Flag = "Toggle1",
	Callback = function(Value)
		local button = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			:WaitForChild("MainGuis")
			:WaitForChild("Aura")
			:WaitForChild("Frame")
			:WaitForChild("ImageLabel")
			:FindFirstChild("AdminButton")

		if button and button:IsA("ImageButton") then
			button.Visible = Value
		end
	end,
})


local Toggle2 = AAuraTab:CreateToggle({
	Name = "Unlock All Admin Auras",
	CurrentValue = false,
	Flag = "Toggle2",
	Callback = function(Value)
		local root = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			:WaitForChild("MainGuis")
			:WaitForChild("Aura")
			:WaitForChild("Frame")
			:WaitForChild("ImageLabel")
			:WaitForChild("AdminFrame")

		for _, imageButton in ipairs(root:GetChildren()) do
			if imageButton:IsA("ImageButton") then
				local adminLock = imageButton:FindFirstChild("AdminLock")
				if adminLock and adminLock:IsA("ImageButton") then
					adminLock.Visible = not Value -- false if toggled on, true if toggled off
				end
			end
		end
	end,
})

local Label = AAuraTab:CreateLabel("Shop Auras", 4483362458, Color3.fromRGB(85, 170, 127), false) -- Title, Icon, Color, IgnoreTheme

local Toggle3 = AAuraTab:CreateToggle({
	Name = "Unlock All Auras",
	CurrentValue = false,
	Flag = "Toggle3",
	Callback = function(Value)
		local root = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			:WaitForChild("MainGuis")
			:WaitForChild("Aura")
			:WaitForChild("Frame")
			:WaitForChild("ImageLabel")
			:WaitForChild("ScrollingFrame")

		for _, imageButton in ipairs(root:GetChildren()) do
			if imageButton:IsA("ImageButton") then
				local adminLock = imageButton:FindFirstChild("Lock")
				if adminLock and adminLock:IsA("ImageButton") then
					adminLock.Visible = not Value -- false if toggled on, true if toggled off
				end
			end
		end
	end,
})

local Toggle4 = AAuraTab:CreateToggle({
	Name = "Unlock All Badge Auras",
	CurrentValue = false,
	Flag = "Toggle4",
	Callback = function(Value)
		local root = game.Players.LocalPlayer:WaitForChild("PlayerGui")
			:WaitForChild("MainGuis")
			:WaitForChild("Aura")
			:WaitForChild("Frame")
			:WaitForChild("ImageLabel")
			:WaitForChild("ScrollingFrame2")

		for _, imageButton in ipairs(root:GetChildren()) do
			if imageButton:IsA("ImageButton") then
				local adminLock = imageButton:FindFirstChild("BadgeLock")
				if adminLock and adminLock:IsA("ImageButton") then
					adminLock.Visible = not Value -- false if toggled on, true if toggled off
				end
			end
		end
	end,
})

-------------------------------------------------------------------------------------------------------------------------------------------------------------

local ShopTab = Window:CreateTab("Shop", 4483362458) -- Title, Image

local Label = ShopTab:CreateLabel("Shop Items", 4483362458, Color3.fromRGB(85, 170, 127), false) -- Title, Icon, Color, IgnoreTheme

local Button = ShopTab:CreateButton({
	Name = "Give All Shop Tools",
	Callback = function()
		local shop = game.ReplicatedStorage:FindFirstChild("Shop")
		if shop then
			for _, tool in ipairs(shop:GetChildren()) do
				if tool:IsA("Tool") then
					local clonedTool = tool:Clone()
					clonedTool.Parent = game.Players.LocalPlayer:WaitForChild("Backpack")
				end
			end
		end
	end,
})

-------------------------------------------------------------------------------------------------------------------------------------------------------------

local TrollTab = Window:CreateTab("Troll", 4483362458) -- Title, Image

local Label = TrollTab:CreateLabel("Void Teleport", 4483362458, Color3.fromRGB(85, 170, 127), false) -- Title, Icon, Color, IgnoreTheme

local function findNearestDriveSeat()
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local Character = LocalPlayer.Character
	local HRP = Character and Character:FindFirstChild("HumanoidRootPart")

	if not HRP then return end

	local nearestSeat = nil
	local shortestDistance = math.huge

	for _, obj in ipairs(workspace:GetDescendants()) do
		if obj:IsA("VehicleSeat") and obj.Name == "Drive" then
			local distance = (HRP.Position - obj.Position).Magnitude
			if distance <= 20 and distance < shortestDistance then
				shortestDistance = distance
				nearestSeat = obj
			end
		end
	end

	if nearestSeat then
		-- Move the player onto the seat
		HRP.CFrame = nearestSeat.CFrame + Vector3.new(0, 1, 0)
	end
end

local Button = TrollTab:CreateButton({
	Name = "Void Bring ALL",
	Callback = function()
		local Players = game:GetService("Players")
		local LocalPlayer = Players.LocalPlayer
		local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")
		local hrp = character:WaitForChild("HumanoidRootPart")

		-- Step 1: Move to start position
		hrp.CFrame = CFrame.new(-822, 3, 326)
		task.wait(0.5)

		-- Step 2: Find nearest Drive seat within 20 studs
		local nearestSeat
		local shortestDistance = 20

		for _, obj in ipairs(workspace:GetDescendants()) do
			if obj:IsA("VehicleSeat") and obj.Name == "Drive" then
				local dist = (hrp.Position - obj.Position).Magnitude
				if dist < shortestDistance then
					shortestDistance = dist
					nearestSeat = obj
				end
			end
		end

		if not nearestSeat then return end

		-- Step 3: Teleport to Drive seat and sit
		hrp.CFrame = nearestSeat.CFrame + Vector3.new(0, 1, 0)
		task.wait(0.5)
		humanoid.Sit = true
		task.wait(0.5)

		-- Step 4: Move seat to each player
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local targetPos = player.Character.HumanoidRootPart.Position + Vector3.new(0, 0, 5)
				nearestSeat.CFrame = CFrame.new(targetPos)
				task.wait(0.2)
			end
		end

		-- Step 5: Drop seat down
		nearestSeat.CFrame = CFrame.new(0, -30, 0)
		task.wait(0.5)

		-- Step 6: Unseat player and bring back up
		humanoid.Sit = false
		task.wait(0.5)
		hrp.CFrame = CFrame.new(0, 10, 0)
	end,
})
